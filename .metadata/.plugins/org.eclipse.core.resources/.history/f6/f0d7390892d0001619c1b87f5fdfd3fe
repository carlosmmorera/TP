package tp.pr3.ProgramCompiler.Instruction;

import tp.pr3.Exception.ArrayException;
import tp.pr3.Exception.LexicalAnalysisException;
import tp.pr3.ProgramCompiler.*;
import tp.pr3.ProgramCompiler.Condition.*;
/**
 * Clase que implementa la instrucción IfThen.
 * @author Carlos Moreno
 * @author Manuel Suárez
 * @version 30/12/2016
 */
public class IfThen implements Instruction{
	Condition condition;
	ParsedProgram ifThenBody;
	
	final int NUMCOMPONENTES = 4;
	/**
	 * Constructores de la clase.
	 */
	public IfThen(){ }
	public IfThen(Condition cnd, ParsedProgram iBody){
		this.condition = cnd;
		this.ifThenBody = iBody;
	}
	/**
	 * Método que parsea la instrucción.
	 * @param words: instrucción introducida en el programa.
	 * @param lexparser encargada del análisis léxico.
	 * @return Instruction dependiendo de si coincide con la instrucción de esta clase.
	 * @throws ArrayException 
	 */
	public Instruction lexParse(String[] words, LexicalParser lexParser) 
			throws ArrayException{
		if (words.length != NUMCOMPONENTES || 
				!words[0].equalsIgnoreCase("IF")) return null;
		else {
			Condition cnd = ConditionParser.parse(words[1], words[2], 
					words[3], lexParser);
			
			if (cnd == null) return null;
			else{
				try{
					ParsedProgram iBody = new ParsedProgram();
					lexParser.lexicalParser(iBody, "ENDIF");
					lexParser.increaseProgramCounter();
					return new IfThen(cnd, iBody);
				}
				catch (LexicalAnalysisException e){
					return null;
				}
			}
		}
	}
	/**
	 * Método que compila la instrucción.
	 * @param @see {@link tp.pr3.ProgramCompiler.Compiler}.
	 * @throws ArrayException
	 */
	public void compile(tp.pr3.ProgramCompiler.Compiler compiler)throws ArrayException{
		this.condition.compile(compiler);
		compiler.compile(this.ifThenBody);
		this.condition.setJump(compiler.getProgramCounter());
	}
}

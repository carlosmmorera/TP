package TP.PR1.MV;

public class Memory {
	private Integer[] memory;
	private int tam;
	private int[] posiciones;
	private int tampos;
	private int numelem;
	
 	public Memory(){
		this.memory = new Integer[100];
		this.posiciones = new int[100];
		this.tampos=100;
		this.tam=100;
		for (Integer x : memory) x = null;
		this.numelem=0;
	}
	public boolean write(int pos, int value){
		if (pos >= 0){
			while (pos >= this.tam) this.resize();
			this.memory[pos] = value;
			if (numelem == tampos) this.resizepos();
			
			posiciones[numelem] = pos;
			++this.numelem;
			return true;
		}
		else return false;
	}
	
	public int read(int pos){
		while (pos >= this.tam) this.resize();
		return this.memory[pos];
	}
	public void resize(){
		Integer newmemory[]=new Integer[2*tam];
		for (int i=0; i<tam; ++i)
			newmemory[i] = this.memory[i];
		
		for (int i=tam; i<2*tam; ++i){
			newmemory[2*i] = null;
		}
		this.tam = 2*tam;
		this.memory = newmemory;
	}
	public void resizepos(){
		int newposiciones[]=new int[2*tampos];
		for (int i=0; i<tampos; ++i)
			newposiciones[i] = this.posiciones[i];
		this.tampos = 2*tampos;
		this.posiciones = newposiciones;
	}
	public void mostrar(){
		System.out.print("Memoria: ");
		if (this.numelem > 0){
			for (int i = 0; i < numelem - 1; ++i){
				int pos = this.posiciones[i];
				System.out.print("[" + Integer.toString(pos) + 
						"]: " + Integer.toString(this.memory[pos]) + " ");
			}
			int pos = this.posiciones[numelem - 1];
			System.out.println("[" + Integer.toString(pos) + 
					"]: " + Integer.toString(this.memory[pos]));
		}
		else System.out.println("<vacia>");
	}
}

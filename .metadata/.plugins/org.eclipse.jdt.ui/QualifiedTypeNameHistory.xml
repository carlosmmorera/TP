<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="tp.pr2.Arithmetics.Arithmetics"/>
<fullyQualifiedTypeName name="tp.pr2.ConditionalJumps.IfEq"/>
<fullyQualifiedTypeName name="tp.pr2.ByteCode.ByteCodeProgram"/>
<fullyQualifiedTypeName name="tp.pr2.CPU.CPU"/>
<fullyQualifiedTypeName name="tp.pr2.ByteCode.ByteCode"/>
<fullyQualifiedTypeName name="tp.pr2.ByteCode.ByteCodeParser"/>
<fullyQualifiedTypeName name="tp.pr3.ProgramCompiler.SourceProgram"/>
<fullyQualifiedTypeName name="java.io.FileReader"/>
<fullyQualifiedTypeName name="java.io.BufferedReader"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="java.io.IOException"/>
<fullyQualifiedTypeName name="java.io.EOFException"/>
<fullyQualifiedTypeName name="java.io.FileNotFoundException"/>
<fullyQualifiedTypeName name="tp.pr3.ProgramCompiler.Compile"/>
<fullyQualifiedTypeName name="tp.pr3.ProgramCompiler.ParsedProgram"/>
<fullyQualifiedTypeName name="tp.pr3.ByteCode.ConditionalJumps.ConditionalJumps"/>
<fullyQualifiedTypeName name="tp.pr3.ProgramCompiler.Term.Term"/>
<fullyQualifiedTypeName name="tp.pr3.ProgramCompiler.LexicalParser"/>
<fullyQualifiedTypeName name="tp.pr3.ProgramCompiler.Term.TermParser"/>
<fullyQualifiedTypeName name="tp.pr3.ProgramCompiler.Condition.ConditionParser"/>
<fullyQualifiedTypeName name="tp.pr3.ProgramCompiler.Instruction.ParserInstruction"/>
<fullyQualifiedTypeName name="tp.pr3.ByteCode.ByteCodeProgram"/>
<fullyQualifiedTypeName name="tp.pr3.ByteCode.Load"/>
<fullyQualifiedTypeName name="tp.pr3.ProgramCompiler.Instruction.Instruction"/>
<fullyQualifiedTypeName name="tp.pr3.ByteCode.Arithmetics.Add"/>
<fullyQualifiedTypeName name="tp.pr3.ByteCode.Halt"/>
<fullyQualifiedTypeName name="tp.pr3.ByteCode.ConditionalJumps.IfEq"/>
<fullyQualifiedTypeName name="tp.pr3.ByteCode.ByteCode"/>
<fullyQualifiedTypeName name="tp.pr3.ByteCode.GoTo"/>
<fullyQualifiedTypeName name="tp.pr3.Exception.BadFormatByteCode"/>
<fullyQualifiedTypeName name="tp.pr3.Exception.DivisionByZero"/>
<fullyQualifiedTypeName name="tp.pr3.Exception.BadFormatCommand"/>
<fullyQualifiedTypeName name="tp.pr3.Exception.StackException"/>
<fullyQualifiedTypeName name="tp.pr3.Exception.StackTooSmall"/>
<fullyQualifiedTypeName name="tp.pr3.Exception.LexicalAnalysisException"/>
<fullyQualifiedTypeName name="tp.pr3.Exception.ArrayException"/>
</qualifiedTypeNameHistroy>

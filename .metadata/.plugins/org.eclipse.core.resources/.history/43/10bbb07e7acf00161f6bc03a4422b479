package tp.pr3.ByteCode.Arithmetics;

import tp.pr3.ByteCode.ByteCode;
import tp.pr3.CPU.CPU;
/**
 * Clase que gestiona el operador aritmético Add.
 * @author Carlos Moreno
 * @author Manuel Suárez
 * @version 30/12/2016
 *
 */
public class Add extends Arithmetics{
	/**
	 * Método que ejecuta el ByteCode.
	 * @param cpu objeto de la clase @see {@link tp.pr2.CPU}.
	 * @param op1 operando 1.
	 * @param op2 operando 2.
	 */
	public void ejec(CPU cpu, int op1, int op2){
		cpu.push(op2 + op1);
	}
	/**
	 * Método que parsea el operador aritmético Add
	 * @param s recibe la cadena de caracteres que representa el ByteCode introducido
	 * @return ByCode dependiendo de si la cadena introducida por el
	 * usuario se corresponde con Add o no
	 */
	public ByteCode parseArith(String[] s){
		if(s[0].equalsIgnoreCase("ADD"))return new Add();
		else return null;
	}
	/**
	 * @return la cadena de caracteres con el BC correspondiente
	 */
	public String toString(){ return "ADD"; }
}
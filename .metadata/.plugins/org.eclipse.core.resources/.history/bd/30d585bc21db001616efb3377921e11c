package tp.pr3.ProgramCompiler.Instruction;

import tp.pr3.ByteCode.Halt;
import tp.pr3.Exception.ArrayException;
import tp.pr3.ProgramCompiler.LexicalParser;
/**
 * Clase que implementa la instrucción Return.
 * @author Carlos Moreno
 * @author Manuel Suárez
 * @version 15/01/2017
 */
public class Return implements Instruction{
	final int LENGTH_INSTRUCTION = 1;
	/**
	 * Método que parsea la instrucción.
	 * @param words: instrucción introducida en el programa.
	 * @param lexparser encargada del análisis léxico.
	 * @return Instruction dependiendo de si coincide con la instrucción de esta clase.
	 */
	public Instruction lexParse(String[] words, LexicalParser lexParser){
		if(words.length != LENGTH_INSTRUCTION 
				|| !words[0].equalsIgnoreCase("RETURN")) return null;
		else{
			lexParser.increaseProgramCounter();
			return new Return();
		}
	}
	/**
	 * Método que compila la instrucción.
	 * @param @see {@link tp.pr3.ProgramCompiler.Compiler}.
	 * @throws ArrayException
	 */
	public void compile(tp.pr3.ProgramCompiler.Compiler compiler) throws ArrayException{
		compiler.addByteCode(new Halt());
	}
	/**
	 * Método que genera un String de la instrucción.
	 */
	public String toString(){
		String s = "return";
		return s;
	}
}

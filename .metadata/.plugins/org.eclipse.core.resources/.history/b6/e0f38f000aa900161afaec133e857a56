package TP.PR1.MV;

public class CommandParser {
	public static Command parse(String line){
		String[] subcadenas=line.split(" ");
		Command comando;
		
		if (subcadenas.length==1){
			switch (subcadenas[0]){
			case "help": comando=new Command(ENUM_COMMAND.HELP); break;
			case "quit": comando=new Command(ENUM_COMMAND.QUIT); break;
			case "run": comando=new Command(ENUM_COMMAND.RUN); break;
			case "reset": comando=new Command(ENUM_COMMAND.RESET); break;
			default: return null;
			}
		}
		if (subcadenas[0] == "help")comando=new Command(ENUM_COMMAND.HELP);
		else if (subcadenas[0] == "quit") comando=new Command(ENUM_COMMAND.QUIT);
		else if (subcadenas[0] == "newinst") {
			ByteCode bc;
			ENUM_BYTECODE ebc;
			if (subcadenas.length == 2){
				switch(subcadenas[1]){
				case "add": ebc=ENUM_BYTECODE.ADD; break;
				case "sub": ebc=ENUM_BYTECODE.SUB; break;
				case "mul": ebc=ENUM_BYTECODE.MUL; break;
				case "div": ebc=ENUM_BYTECODE.DIV; break;
				case "out": ebc=ENUM_BYTECODE.OUT; break;
				case "halt": ebc=ENUM_BYTECODE.HALT; break;
				default: return null;
				}
				bc=new ByteCode(ebc);
			}
			else if (subcadenas.length == 3){
				switch(subcadenas[1]){
				case "push": ebc=ENUM_BYTECODE.PUSH; break;
				case "load": ebc=ENUM_BYTECODE.LOAD; break;
				case "store": ebc=ENUM_BYTECODE.STORE; break;
				default: return null;
				}
				int par= Integer.parseInt(subcadenas[2]);
				bc=new ByteCode(ebc, par);
			}
			else return null;
			comando=new Command(bc);
		}
		else if (subcadenas[0] == "run")comando=new Command(ENUM_COMMAND.RUN);
		else if (subcadenas[0] == "reset")comando=new Command(ENUM_COMMAND.RESET);
		else if (subcadenas[0] == "replace" && subcadenas.length == 2){
			int rep = Integer.parseInt(subcadenas[1]);
			comando=new Command(rep);
		}
		else return null;
		
		return comando;
	}
}
